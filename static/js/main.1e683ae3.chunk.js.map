{"version":3,"sources":["App.js","index.js"],"names":["App","useState","catQuote","setCatQuote","catData","setCatData","isCatDataUpdated","setIsCatDataUpdated","isShuffeled","useRef","contentLimit","setContentLimit","useEffect","a","fetch","then","res","json","result","fact","fetchCatQuote","results","tempData","forEach","push","id","fetchCatData","shuffArr","Array","from","array","i","length","j","Math","floor","random","temp","shuffleArray","current","className","undefined","slice","map","data","alt","src","onClick","prevLimit","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAwGeA,MAtGf,WACE,MAAgCC,mBAAS,WAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACMC,EAAcC,kBAAO,GAC3B,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAuDA,OA3CAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACQC,MAAM,8BACTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAYf,EAAYe,EAAOC,SAHzC,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAEHR,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACQC,MAAM,yCACTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACM,GACL,IAAIC,EAAW,GACfD,EAAQE,SAAQ,SAACL,GACfI,EAASE,KAAKN,EAAOO,OAGvBpB,EAAWiB,MATjB,4CADc,uBAAC,WAAD,wBAcdI,KACC,IAEHd,qBAAU,WACkB,qBAAfR,EAAQ,IACjBG,GAAoB,KAErB,CAACH,IAEJQ,qBAAU,WACR,GAA0B,qBAAfR,EAAQ,GAAoB,CACrC,IAAIuB,EAAWC,MAAMC,KAAKzB,IA5C9B,SAAsB0B,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,GAwCXC,CAAaX,GACbtB,EAAWsB,GACXnB,EAAY+B,SAAU,KAGvB,CAACjC,IAGF,sBAAKkC,UAAU,MAAf,UACE,mCACE,qBAAKA,UAAU,SAAf,oBACA,qBAAKA,UAAU,YAAf,qCACA,sBAAKA,UAAU,QAAf,mBAAyBtC,EAAzB,eAEF,oCACyBuC,WAAfrC,EAAQ,IAAoBI,EAClCJ,EAAQsC,MAAM,EAAGhC,GAAciC,KAAI,SAACC,GAClC,OACE,qBAAKJ,UAAU,SAAf,SACE,qBACEK,IAAI,OACJL,UAAU,SACVM,IAAG,iCAA4BF,UAMvC,2CAGJ,wBACEJ,UAAU,WACVO,QAAS,WACPpC,GAAgB,SAACqC,GACf,OAAOA,EAAY,OAJzB,uBAUA,qEACmB,IACjB,mBAAGC,KAAK,uCAAR,4BC7FRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e683ae3.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nfunction App() {\n  const [catQuote, setCatQuote] = useState(\"Loading\");\n  const [catData, setCatData] = useState([]);\n  const [isCatDataUpdated, setIsCatDataUpdated] = useState(false);\n  const isShuffeled = useRef(false);\n  const [contentLimit, setContentLimit] = useState(10);\n  //Algorithm for shuffling the id array\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  }\n\n  useEffect(() => {\n    async function fetchCatQuote() {\n      await fetch(\"https://catfact.ninja/fact\")\n        .then((res) => res.json())\n        .then((result) => setCatQuote(result.fact));\n    }\n\n    fetchCatQuote();\n  }, []);\n\n  useEffect(() => {\n    async function fetchCatData() {\n      await fetch(\"https://cataas.com/api/cats?limit=500\")\n        .then((res) => res.json())\n        .then((results) => {\n          let tempData = [];\n          results.forEach((result) => {\n            tempData.push(result.id);\n          });\n\n          setCatData(tempData);\n        });\n    }\n\n    fetchCatData();\n  }, []);\n\n  useEffect(() => {\n    if (typeof catData[0] !== \"undefined\") {\n      setIsCatDataUpdated(true);\n    }\n  }, [catData]);\n\n  useEffect(() => {\n    if (typeof catData[0] !== \"undefined\") {\n      let shuffArr = Array.from(catData);\n      shuffleArray(shuffArr);\n      setCatData(shuffArr);\n      isShuffeled.current = true;\n    }\n    // eslint-disable-next-line\n  }, [isCatDataUpdated]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"header\">Catify</div>\n        <div className=\"subHeader\">Your daily dose of Cats</div>\n        <div className=\"quote\">“{catQuote}”</div>\n      </header>\n      <main>\n        {typeof catData[0] !== undefined && isShuffeled ? (\n          catData.slice(0, contentLimit).map((data) => {\n            return (\n              <div className=\"imgDiv\">\n                <img\n                  alt=\"cats\"\n                  className=\"catImg\"\n                  src={`https://cataas.com/cat/${data}`}\n                ></img>\n              </div>\n            );\n          })\n        ) : (\n          <h1>loading</h1>\n        )}\n      </main>\n      <button\n        className=\"loadMore\"\n        onClick={() => {\n          setContentLimit((prevLimit) => {\n            return prevLimit + 10;\n          });\n        }}\n      >\n        Load More\n      </button>\n      <footer>\n        Made with ❤️️ by{\" \"}\n        <a href=\"https://www.instagram.com/_tsensei_/\">tsensei</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}